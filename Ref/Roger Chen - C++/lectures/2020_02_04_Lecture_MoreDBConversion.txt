//DB conversion
#include <iostream>
#include <list>
#include <vector>
#include <map>
#include <string>

using namespace std;

template <class T> ostream& operator<<(ostream& str, const vector<T> V) {
	str << "< ";
	for (auto i : V) { str << i << " "; }
	str << ">";
	return str;
}

template <class T> ostream& operator<<(ostream& str, const list<T> L) {
	str << "{ ";
	for (auto i : L) { str << i << " "; }
	str << "}";
	return str;
}
template <class T> ostream& operator<<(ostream& str, const list<T*> L) {
	str << "{ ";
	for (auto i : L) { str << *i << " "; }
	str << "}";
	return str;
}

template <class T> ostream& operator<<(ostream& str, const vector<T*> V) {
	str << "< ";
	for (auto i : V) { str << *i << " "; }
	str << ">";
	return str;
}

void DB1_to_DB2(vector<list<int>>& DB1, list<vector<int>>& DB2);
void DB1_to_DB3(vector<list<int>>& DB1, list<list<int>*>& DB3);
void DB3_to_DB4(list<list<int>*>& DB3, list<vector<int *>*> & DB4);
void DB4_to_DB2(list<vector<int*>*>& DB4, list<vector<int>>& DB2);
int main() {
	vector<list<int>> DB1{ {1,2,3}, {4,5}, {6,7,8} };
	cout << DB1 << endl;
	list<vector<int>> DB2;
	DB1_to_DB2(DB1, DB2);
	cout << DB2 << endl;
	list<list<int>*> DB3;
	DB1_to_DB3(DB1, DB3);
	cout << DB3 << endl;
	list<vector<int*>*> DB4;
	DB3_to_DB4(DB3, DB4);
	cout << DB4 << endl;
	DB4_to_DB2(DB4, DB2);
	cout << DB2 << endl;
	return 0;
}
void DB1_to_DB2(vector<list<int>>& DB1, list<vector<int>>& DB2) {
	DB2.clear();
	for (auto i : DB1) {
		vector<int> V1;
		for (auto j : i) {
			V1.push_back(j);
		}
		DB2.push_back(V1);
	}
}
void DB1_to_DB3(vector<list<int>>& DB1, list<list<int>*>& DB3) {
	DB3.clear();
	for (auto i : DB1) {
		list<int>* p = new list<int>;
		for (auto j : i) {
			p->push_back(j);
		}
		DB3.push_back(p);
	}
}
/*

The following is wrong.
void DB1_to_DB3(vector<list<int>>& DB1, list<list<int>*>& DB3) {
	for (auto i : DB1) {
		list<int> L2;
		for (auto j : i) {
			L2.push_back(j);

		}
		DB3.push_back(&L2);
	}
}
*/

void DB3_to_DB4(list<list<int>*>& DB3, list<vector<int*>*>& DB4) {
	DB4.clear();
	for (auto i : DB3) {
		vector<int*> * p = new vector<int*>;
		for (auto j : *i) {
			int* p1 = new int(j);
			p->push_back(p1);
		}
		DB4.push_back(p);
	}
}

void DB4_to_DB2(list<vector<int*>*>& DB4, list<vector<int>>& DB2) {
	DB2.clear();

	for (auto i: DB4) {
		vector<int> V;
		for (auto j: *i) {
			V.push_back(*j);
		}
		DB2.push_back(V);
	}
}