#include <iostream>
using namespace std;

class Node {
public:
	int value;
	Node* next;
	Node() { next = nullptr; }
	Node(int i) { value = i; next = nullptr; }

};

class LinkedList {
public:
	Node* head;
	LinkedList() { head = nullptr; }
	LinkedList(const initializer_list<int>& I);
	LinkedList(const LinkedList& L);
	void operator=(const LinkedList& L);
	LinkedList ThreeTimes();
	~LinkedList();
};
LinkedList::~LinkedList() {
	while (head) {
		Node* p = head->next;
		delete head;
		head = p;
	}

}

LinkedList LinkedList::ThreeTimes() {
	LinkedList temp(*this);
	Node* p = temp.head;
	while (p) {
		p->value *= 3;
		p = p->next;
	}
	return temp;

}

void LinkedList::operator=(const LinkedList& L) {
	while (head) {
		Node* p = head->next;
		delete head;
		head = p;
	}
	
	Node* p = L.head;
	while (p) {
		Node* p1 = new Node();
		p1->next = head;
		head = p1;
		p = p->next;
	}
	Node* p1 = head;
	p = L.head;
	while (p1) {
		p1->value = p->value;
		p1 = p1->next;
		p = p->next;
	}

}
LinkedList::LinkedList(const LinkedList& L) : LinkedList() {
	Node* p = L.head;
	while (p) {
		Node* p1 = new Node();
		p1->next = head;
		head = p1;
		p = p->next;
	}
	Node* p1 = head;
	p = L.head;
	while (p1) {
		p1->value = p->value;
		p1 = p1->next;
		p = p->next;
	}
}

LinkedList::LinkedList(const initializer_list<int>& I) {
	auto it = I.end() - 1;
	head = nullptr;
	while (it != I.begin() - 1) {
		Node* p = new Node(*it);
		p->next = head;
		head = p;
		it--;
	}
}


ostream& operator<<(ostream& str, const LinkedList& L) {
	Node* p = L.head;
	while (p) {
		str << p->value<<" ";
		p = p->next;
	}
	return str;
}

int main() {
	LinkedList L1 ={ 3,6,9,12,15 };
	cout << L1.head->value << endl;
	cout << L1 << endl;
	LinkedList L2;
	L2 = L1;
	cout << L2 << endl;
	L2.head->value = 100;
	cout << L1 << endl;
	LinkedList L3{ L1 };
	cout << L3 << endl;
	L3.head->value = 200;
	cout << L1 << endl;
	LinkedList L4;
	L4 = L1.ThreeTimes();
	cout << L4 << endl;

	return 0;
}